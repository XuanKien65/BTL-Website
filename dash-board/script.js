document.addEventListener("DOMContentLoaded", function () {
    const toggleBtn = document.getElementById("toggle-btn");
    const sidebar = document.getElementById("sidebar");

    toggleBtn.addEventListener("click", function () {
        sidebar.classList.toggle("expand");
    });
    
    const date = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];
    const paper = [100,200,300,500,400,100,700,1000,900,1000,1100,200,100,200,300,500,400,100,700,1000,900,1000,1100,200,100,200,300,500,400,100];
    const ctx = document.getElementById("chart").getContext("2d");

new Chart(ctx, {
        type: 'line',
        data: {
            labels: date,
            datasets: [
                {
                    label: 'L∆∞·ª£ng truy c·∫≠p',
                    data: paper,
                    backgroundColor: 'rgba(253, 86, 86, 0.69)',
                    borderColor: 'rgb(241, 228, 34)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.5
                },
                {   
                    label: 'S·ªë b√†i b√°o',
                    data: [50, 150, 150, 200, 2500, 300, 350, 40, 450, 50, 550, 600,50, 150, 150, 200, 2500, 300, 350, 40, 450, 50, 550, 600,50, 150, 150, 200, 2500, 300, 350, 40, 450, 50, 550, 600],
                    backgroundColor: 'rgba(241, 61, 100, 0.2)',
                    borderColor: 'rgba(182, 25, 230, 0.9)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.5
                }
            ]
        },
        options: {
            devicePixelRatio: 2,
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                title: {
                    display: true,
                    text: 'Bi·ªÉu ƒë·ªì th·ªëng k√™',
                    font: {
                        size: 18,
                        weight: 'bold'
                    },
                    padding: {
                        top: 10,
                        bottom: 0
                    }
                },
                legend: {
                    position: 'top',
                    labels: {
                        boxWidth: 50, // üîπ Gi·∫£m k√≠ch th∆∞·ªõc √¥ m√†u
                        font: {
                            size: 16,
                            weight: 'bold'
                        },
                        color: '#000' // üîπ Ch·ªØ ƒë·∫≠m m√†u h∆°n
                    },
                    padding: {
                        top: 0,
                        bottom: 10
                    }
                }
            },
            fullSize: true,
            scales: {
                x: {
                    ticks: {
                        font: {
                            size: 12
                        }
                    }
                },
                y: {
                    ticks: {
                        font: {
                            size: 12
                        }
                    }
                }
            }
        }
    });
});

// T·∫°o file script.js ho·∫∑c th√™m v√†o file JavaScript hi·ªán c√≥

// Th√™m dropdown menu v√†o sau button
function setupUserDropdown() {
    const dropdownButton = document.getElementById('dropdownMenuButton');
    
    // T·∫°o dropdown menu
    const dropdownMenu = document.createElement('ul');
    dropdownMenu.className = 'dropdown-menu dropdown-menu-end';
    dropdownMenu.innerHTML = `
        <li>
            <div class="dropdown-item-text">
                <div class="d-flex align-items-center p-2">
                    <img src="https://img.freepik.com/premium-vector/avatar-icon0002_750950-43.jpg" class="rounded-circle" width="50" alt="User">
                    <div class="ms-3">
                        <h6 class="mb-0">${getUserName()}</h6>
                        <small class="text-muted">Administrator</small>
                    </div>
                </div>
            </div>
        </li>
        <li><hr class="dropdown-divider"></li>
        <li>
            <a class="dropdown-item d-flex align-items-center" href="#">
                <span class="material-icons me-2">person</span>
                Th√¥ng tin c√° nh√¢n
            </a>
        </li>
        <li>
            <a class="dropdown-item d-flex align-items-center" href="#">
                <span class="material-icons me-2">settings</span>
                C√†i ƒë·∫∑t t√†i kho·∫£n
            </a>
        </li>
        <li><hr class="dropdown-divider"></li>
        <li>
            <a class="dropdown-item d-flex align-items-center text-danger" href="#">
                <span class="material-icons me-2">help</span>
                Tr·ª£ gi√∫p
            </a>
        </li>
    `;
    
    // Ch√®n dropdown menu v√†o sau button
    dropdownButton.after(dropdownMenu);

    // X·ª≠ l√Ω s·ª± ki·ªán click cho c√°c menu items
    dropdownMenu.querySelectorAll('.dropdown-item').forEach(item => {
        item.addEventListener('click', (e) => {
            e.preventDefault();
            const action = e.currentTarget.textContent.trim();
            
            switch(action) {
                case 'Th√¥ng tin c√° nh√¢n':
                    console.log('M·ªü trang th√¥ng tin c√° nh√¢n');
                    // Th√™m code chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang th√¥ng tin c√° nh√¢n
                    break;
                    
                case 'C√†i ƒë·∫∑t t√†i kho·∫£n':
                    console.log('M·ªü trang c√†i ƒë·∫∑t');
                    // Th√™m code chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang c√†i ƒë·∫∑t
                    break;
            }
        });
    });
}

// H√†m l·∫•y t√™n ng∆∞·ªùi d√πng - c√≥ th·ªÉ thay ƒë·ªïi theo logic c·ªßa b·∫°n
function getUserName() {
    // T·∫°m th·ªùi return gi√° tr·ªã m·∫∑c ƒë·ªãnh
    // Sau n√†y c√≥ th·ªÉ l·∫•y t·ª´ session/localStorage ho·∫∑c API
    return "Admin User";
}

// H√†m l·∫•y icon theo th·ªùi gian
function getTimeIcon() {
    const hour = new Date().getHours();
    
    if (hour >= 5 && hour < 12) {
        return "‚òÄÔ∏è"; // Icon m·∫∑t tr·ªùi cho bu·ªïi s√°ng
    } else if (hour >= 12 && hour < 18) {
        return "üå§Ô∏è"; // Icon m·∫∑t tr·ªùi c√≥ m√¢y cho bu·ªïi chi·ªÅu
    } else {
        return '<span class="material-icons moon-icon">nightlight</span>'; // Icon m·∫∑t trƒÉng x√°m
    }
}

// H√†m l·∫•y l·ªùi ch√†o theo th·ªùi gian
function getGreeting() {
    const hour = new Date().getHours();
    const userName = getUserName();
    let greetingText = '';
    let timeText = '';
    
    if (hour >= 5 && hour < 12) {
        greetingText = "Ch√†o bu·ªïi s√°ng";
        timeText = "Ch√∫c b·∫°n m·ªôt ng√†y t·ªët l√†nh!";
    } else if (hour >= 12 && hour < 18) {
        greetingText = "Ch√†o bu·ªïi chi·ªÅu";
        timeText = "Ch√∫c b·∫°n l√†m vi·ªác hi·ªáu qu·∫£!";
    } else {
        greetingText = "Ch√†o bu·ªïi t·ªëi";
        timeText = "Ch√∫c b·∫°n ngh·ªâ ng∆°i th·∫≠t t·ªët!";
    }

    return {
        icon: getTimeIcon(),
        greeting: greetingText,
        name: userName,
        message: timeText
    };
}

// H√†m c·∫≠p nh·∫≠t l·ªùi ch√†o
function updateGreeting() {
    const greetingContainer = document.querySelector('.greeting-container');
    const greetingData = getGreeting();
    
    // T·∫°o HTML cho l·ªùi ch√†o
    const greetingHTML = `
        <div class="greeting-content">
            <div class="greeting-icon">${greetingData.icon}</div>
            <div class="greeting-text">
                <div class="greeting-main">
                    <span class="greeting">${greetingData.greeting}</span>
                    <span class="user-name">${greetingData.name}</span>
                </div>
                <div class="greeting-message">${greetingData.message}</div>
            </div>
        </div>
    `;
    
    greetingContainer.innerHTML = greetingHTML;
}

// Kh·ªüi t·∫°o khi trang ƒë∆∞·ª£c load
document.addEventListener('DOMContentLoaded', function() {
    updateGreeting();
    
    // C·∫≠p nh·∫≠t l·ªùi ch√†o m·ªói ph√∫t
    setInterval(updateGreeting, 60000);
    setupUserDropdown();
});

// Th√™m s·ª± ki·ªán ƒë·ªÉ c·∫≠p nh·∫≠t l·ªùi ch√†o khi tab ƒë∆∞·ª£c focus l·∫°i
document.addEventListener('visibilitychange', function() {
    if (!document.hidden) {
        updateGreeting();
    }
});

